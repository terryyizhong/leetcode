Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.

######## Use slope  ********can not deal with the case  "[[0,0],[94911151,94911150],[94911152,94911151]]" unless use numpy
def maxPoints(self, points):
        """
        :type points: List[Point]
        :rtype: int
        """
        l, ans = len(points), 0
        for i in range(l):
            dic, same = {'i': 1}, 0
            for j in range(i+1, l):
                dx = points[j].x - points[i].x
                dy = points[j].y - points[i].y
                if dx == 0 and dy == 0:
                    same += 1
                elif dx == 0:
                    dic['i'] = dic.get('i', 1) + 1
                else:
                    k = dy*1.0 / dx
                    dic[k] = dic.get(k, 1) + 1
            ans = max(ans, same+max(dic.values()))
        return ans
        
###use gcd of dx and dy, and store tuple (dx//gcd, dy//gcd)         

def maxPoints(self, points):
        """
        :type points: List[Point]
        :rtype: int
        """
        l, ans = len(points), 0
        for i in range(l):
            dic = {}
            same = 1
            for j in range(i+1, l):
                dx = points[j].x - points[i].x
                dy = points[j].y - points[i].y
                if dx == 0 and dy == 0:
                    same += 1
                else:
                    gcd = self.gcd(dx, dy)
                    dx /= gcd
                    dy /= gcd
                    dic[(dx, dy)] = dic.get((dx, dy), 0) + 1
            if dic:
                ans = max(ans, same+max(dic.values()))
            ans = max(ans, same)
        return ans
        
    def gcd(self, a, b):
        if b == 0:
            return a
        return self.gcd(b, a%b)
