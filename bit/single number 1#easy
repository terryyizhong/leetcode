'''
Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
'''
# xor is commucative: a ^ b ^ c = b ^ a ^ c (any combination)
class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        ans = 0
        for i in nums:
            ans ^= i
        return ans
 #################       
def singleNumber(self, nums):
    return reduce(lambda x, y: x ^ y, nums)        
  
